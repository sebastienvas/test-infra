// Copyright 2016 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/rpc/status.proto";

package istio.test-infra.cluster-pool;

enum ClusterStatus {
  CREATING = 0;
  READY = 1;
  IN_USE = 2;
  DELETED = 3;
}

message Cluster {
  string config = 1;
  ClusterStatus status = 2;
  string id = 3 ;
  string config_hash = 4;
  string kube_config = 5;
  int ttl_min = 6;
  int lifespan_hours = 7;
}

message CreateClusterRequest {
  string config = 1;
}

message CreateClusterResponse {
  google.rpc.Status status = 1;
  string operation_id;
  string id = 2;
}

message DeleteClusterRequest {
  string id = 1;
}

message DeleteClusterResponse {
  google.rpc.Status status = 1;
  string operation_id = 2;
}

message ListClusterRequest {
  string filter = 1;
}

message ListClusterResponse {
  google.rpc.Status status = 1;
  repeated Cluster clusters = 2;
}


service ClusterManager {

  // Asynchronous rpc to create a cluster from a config string
  rpc CreateCluster(CreateClusterRequest) returns (CreateClusterResponse) {}

  // Asynchronous function to delete a cluster from
  rpc DeleteCluster(DeleteClusterRequest) returns (DeleteClusterResponse) {}

  // Sync function to list existing cluster
  rpc ListClusters (ListClusterRequest) returns (ListClusterResponse) {}
}
